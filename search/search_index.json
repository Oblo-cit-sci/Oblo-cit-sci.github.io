{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Oblo documentation Domain Initialization environment variables: This should be set outside the env file. Which specifies which file is selected. ENV: either 'dev','test' or 'prod' HOST (REQUIRED): Host address (eventually including the port) of the app. (dev-server when frontend is running in development mode) e.g. http://localhost:8100 or https://oblo-server.net . PORT: This is only required when the app is started from the main file (default: 8100) In order to connect to a postgres database the following variables are required: POSTGRES_HOST (REQUIRED): Host address of the postgres database POSTGRES_USER (REQUIRED): Username for the postgres database POSTGRES_PASSWORD (REQUIRED): Password of the postgres database POSTGRES_DB (REQUIRED): Name of the postgres database FIRST_ADMIN_EMAIL (REQUIRED): Email of the first admin user FIRST_ADMIN_PASSWORD (REQUIRED): Password of the first admin user EMAIL_ENABLED: (False or True) Set if emails should be sent (default: False) EMAIL_SENDER(REQUIRED, when EMAIL_ENABLED): Name of the sender, including the server. EMAIL_ACCOUNT (REQUIRED, when EMAIL_ENABLED): Email address of the sender EMAIL_PWD (REQUIRED, when EMAIL_ENABLED): Password of the email account EMAIL_SSL_SERVER (REQUIRED, when EMAIL_ENABLED): smtp-server of email account SESSION_SECRET (REQUIRED): A generic secret to be used for session encryption MAP_DEFAULT_MAP_STYLE: str MAP_ACCESS_TOKEN: SecretStr ADDITIONAL_MAP_STYLES: Optional[Set[str]] = Field([], description=\"languages that should be deactivated\") PLATFORM_TITLE: Title of the platform (default: Oblo) APP_DIR: Directory of the app (default: 'fe') APP_ROUTE: Route of the app. Configured when building the frontend app. (default: '/') LANGUAGE_SQLITE_FILE_PATH: path of the sqlite database for frontend and backend messages (for translations) DEACTIVATE_LANGUAGES: Set if languages should be deactivated (default: empty list). This should be a json array, e.g.[\"es\",\"fr\"] The frontend The frontend (oblo-frontend) is statically generated web-application (XXX-URL) which also served by the backend. Thus the generated folder should also be in the application folder domains: fundamental is the initialization of the domains and their entries. All folders in the folder Settings.INIT_DOMAINS_FOLDER will be considered, except those starting with an _ . The domain no_domain . Languages Oblo can work in any languages supported by utf-8 (currently the frontend has only been designed for LTR languages). The i18n messages of the frontend and the backend are stored in sqlite database, which is generated during the first startup. Initially the messages are read from 2 csv files, which should be in init_data/languages and respectively called fe.csv and be.csv. As a source of language names of all language contained languages currently are: English, spanish and catalan. Controller Controller","title":"Home"},{"location":"#oblo-documentation","text":"","title":"Oblo documentation"},{"location":"#domain","text":"","title":"Domain"},{"location":"#initialization","text":"environment variables: This should be set outside the env file. Which specifies which file is selected. ENV: either 'dev','test' or 'prod' HOST (REQUIRED): Host address (eventually including the port) of the app. (dev-server when frontend is running in development mode) e.g. http://localhost:8100 or https://oblo-server.net . PORT: This is only required when the app is started from the main file (default: 8100) In order to connect to a postgres database the following variables are required: POSTGRES_HOST (REQUIRED): Host address of the postgres database POSTGRES_USER (REQUIRED): Username for the postgres database POSTGRES_PASSWORD (REQUIRED): Password of the postgres database POSTGRES_DB (REQUIRED): Name of the postgres database FIRST_ADMIN_EMAIL (REQUIRED): Email of the first admin user FIRST_ADMIN_PASSWORD (REQUIRED): Password of the first admin user EMAIL_ENABLED: (False or True) Set if emails should be sent (default: False) EMAIL_SENDER(REQUIRED, when EMAIL_ENABLED): Name of the sender, including the server. EMAIL_ACCOUNT (REQUIRED, when EMAIL_ENABLED): Email address of the sender EMAIL_PWD (REQUIRED, when EMAIL_ENABLED): Password of the email account EMAIL_SSL_SERVER (REQUIRED, when EMAIL_ENABLED): smtp-server of email account SESSION_SECRET (REQUIRED): A generic secret to be used for session encryption MAP_DEFAULT_MAP_STYLE: str MAP_ACCESS_TOKEN: SecretStr ADDITIONAL_MAP_STYLES: Optional[Set[str]] = Field([], description=\"languages that should be deactivated\") PLATFORM_TITLE: Title of the platform (default: Oblo) APP_DIR: Directory of the app (default: 'fe') APP_ROUTE: Route of the app. Configured when building the frontend app. (default: '/') LANGUAGE_SQLITE_FILE_PATH: path of the sqlite database for frontend and backend messages (for translations) DEACTIVATE_LANGUAGES: Set if languages should be deactivated (default: empty list). This should be a json array, e.g.[\"es\",\"fr\"]","title":"Initialization"},{"location":"#the-frontend","text":"The frontend (oblo-frontend) is statically generated web-application (XXX-URL) which also served by the backend. Thus the generated folder should also be in the application folder domains: fundamental is the initialization of the domains and their entries. All folders in the folder Settings.INIT_DOMAINS_FOLDER will be considered, except those starting with an _ . The domain no_domain .","title":"The frontend"},{"location":"#languages","text":"Oblo can work in any languages supported by utf-8 (currently the frontend has only been designed for LTR languages). The i18n messages of the frontend and the backend are stored in sqlite database, which is generated during the first startup. Initially the messages are read from 2 csv files, which should be in init_data/languages and respectively called fe.csv and be.csv. As a source of language names of all language contained languages currently are: English, spanish and catalan.","title":"Languages"},{"location":"#controller","text":"Controller","title":"Controller"},{"location":"integrated/Aspects/","text":"How to add new Aspects Frontend lib/aspect.js add default value to function aspectTypeDefault add the Aspect Vue component to get_aspect_vue_component lib/consts.js add constant for aspect type Text Is a textarea if max is not present or more than 100 characters can have a placeholder can have clear icon appended (during editing) if its in a list (-> List) dev: there can rules, which are also in the extra (object. thisnis general (AspectComponentMixin)) Number can have a min and max can have a suffix Select MultiSelect TreeSelect TreeMultiSelect Location Image Video Date Month List Composite Options Geometry ExternalAccount EntryRoles","title":"Aspects"},{"location":"integrated/Aspects/#how-to-add-new-aspects","text":"","title":"How to add new Aspects"},{"location":"integrated/Aspects/#frontend","text":"lib/aspect.js add default value to function aspectTypeDefault add the Aspect Vue component to get_aspect_vue_component lib/consts.js add constant for aspect type","title":"Frontend"},{"location":"integrated/Aspects/#text","text":"Is a textarea if max is not present or more than 100 characters can have a placeholder can have clear icon appended (during editing) if its in a list (-> List) dev: there can rules, which are also in the extra (object. thisnis general (AspectComponentMixin))","title":"Text"},{"location":"integrated/Aspects/#number","text":"can have a min and max can have a suffix","title":"Number"},{"location":"integrated/Aspects/#select","text":"","title":"Select"},{"location":"integrated/Aspects/#multiselect","text":"","title":"MultiSelect"},{"location":"integrated/Aspects/#treeselect","text":"","title":"TreeSelect"},{"location":"integrated/Aspects/#treemultiselect","text":"","title":"TreeMultiSelect"},{"location":"integrated/Aspects/#location","text":"","title":"Location"},{"location":"integrated/Aspects/#image","text":"","title":"Image"},{"location":"integrated/Aspects/#video","text":"","title":"Video"},{"location":"integrated/Aspects/#date","text":"","title":"Date"},{"location":"integrated/Aspects/#month","text":"","title":"Month"},{"location":"integrated/Aspects/#list","text":"","title":"List"},{"location":"integrated/Aspects/#composite","text":"","title":"Composite"},{"location":"integrated/Aspects/#options","text":"","title":"Options"},{"location":"integrated/Aspects/#geometry","text":"","title":"Geometry"},{"location":"integrated/Aspects/#externalaccount","text":"","title":"ExternalAccount"},{"location":"integrated/Aspects/#entryroles","text":"","title":"EntryRoles"},{"location":"integrated/Entry-integrations/","text":"Entry integration entry integrations are parts that are included into entries by the template or the domain the entry belongs to or the NO_DOMAIN domain (platform domain). It can also include rules e.g. what the status of new entry should be. (for process_entry_post) requires_review merge the dicts from NO_DOMAIN, entry.domain and entry.template.rules.requires_review in that order (so template rules override domain rules). If any condition is met the entry is marked as requires_review. e.g. visitors entries are not reviewed by default. domain: entry: create: required_review a dict of rules. e.g. : { \"actor.role\": [\"visitor\"] } after_create:","title":"Entry integration"},{"location":"integrated/Entry-integrations/#entry-integration","text":"entry integrations are parts that are included into entries by the template or the domain the entry belongs to or the NO_DOMAIN domain (platform domain). It can also include rules e.g. what the status of new entry should be. (for process_entry_post)","title":"Entry integration"},{"location":"integrated/Entry-integrations/#requires_review","text":"merge the dicts from NO_DOMAIN, entry.domain and entry.template.rules.requires_review in that order (so template rules override domain rules). If any condition is met the entry is marked as requires_review. e.g. visitors entries are not reviewed by default. domain: entry: create: required_review a dict of rules. e.g. : { \"actor.role\": [\"visitor\"] } after_create:","title":"requires_review"},{"location":"pages/setup/","text":"Setup and initialization","title":"Setup and initialization"},{"location":"pages/setup/#setup-and-initialization","text":"","title":"Setup and initialization"},{"location":"pages/concepts/domain/","text":"Domain Domains are stored in the two different tables: domain_meta and domain. domain_meta hold the following fields: name: a unique name (str) content: the language unspecific data of the domain (json) index: the index in the list, when they are returned sorted (int) is_active: if the domain should be returned during normal requests (bool) default_language: the default language of the domain, code/template entries should be of this language first (str) domain has the following fields: A domain Object contains the full domain data in specific languages. Domain objects are unique for the tuple of the domain_meta (a ForeignKey to a domain_meta object) and their language. title: the title of the domain in the given language (str) language: the language of this domain object (and its content) (str) content: the full data of the domain (str) is_active: if the domain data is available in this language (bool)","title":"Domains"},{"location":"pages/concepts/domain/#domain","text":"Domains are stored in the two different tables: domain_meta and domain. domain_meta hold the following fields: name: a unique name (str) content: the language unspecific data of the domain (json) index: the index in the list, when they are returned sorted (int) is_active: if the domain should be returned during normal requests (bool) default_language: the default language of the domain, code/template entries should be of this language first (str) domain has the following fields: A domain Object contains the full domain data in specific languages. Domain objects are unique for the tuple of the domain_meta (a ForeignKey to a domain_meta object) and their language. title: the title of the domain in the given language (str) language: the language of this domain object (and its content) (str) content: the full data of the domain (str) is_active: if the domain data is available in this language (bool)","title":"Domain"},{"location":"pages/concepts/template_code_entries/","text":"Templates and Codes Concrete entries: Concrete entries, which have base-template and base-codes as templates can be up-to-date, meaning the template_version is the same as the current version of the base-entry. In case it is not, there are 2 levels, it can be outdated: - constrained outdated: Some attributes have been changed - structurally outdated: aspects have been changed For Concrete","title":"Templates and Codes"},{"location":"pages/concepts/template_code_entries/#templates-and-codes","text":"","title":"Templates and Codes"},{"location":"pages/concepts/template_code_entries/#concrete-entries","text":"Concrete entries, which have base-template and base-codes as templates can be up-to-date, meaning the template_version is the same as the current version of the base-entry. In case it is not, there are 2 levels, it can be outdated: - constrained outdated: Some attributes have been changed - structurally outdated: aspects have been changed For Concrete","title":"Concrete entries:"},{"location":"pages/structure/","text":"Basic project Structure app includes the main source code configs includes the environmental variables, oauth-server configs and the logger configuration data holds the data for initialization generally used by the application static static files that are served by the server logs log outputs","title":"Basic structure"},{"location":"pages/structure/#basic-project-structure","text":"app includes the main source code configs includes the environmental variables, oauth-server configs and the logger configuration data holds the data for initialization generally used by the application static static files that are served by the server logs log outputs","title":"Basic project Structure"},{"location":"pages/structure/controller/","text":"Controller the python modules in the controller package include all the endpoints. They are all included in the controller.__init__.py . There are following controller: Basic This controller delivers the initialization data and the domain basics (depending on language and start page) Actor All actor related routes Domain All domain related routes Entry All entry related routes Entries All routes, that deal with multiple entries (e.g. search, download) Entry_files All routes that deal with entry-attachments Config Some admin and migration endpoints Language Language and Message related enpoints OAuth Plugin sse_connection Util Test","title":"Controller"},{"location":"pages/structure/controller/#controller","text":"the python modules in the controller package include all the endpoints. They are all included in the controller.__init__.py . There are following controller:","title":"Controller"},{"location":"pages/structure/controller/#basic","text":"This controller delivers the initialization data and the domain basics (depending on language and start page)","title":"Basic"},{"location":"pages/structure/controller/#actor","text":"All actor related routes","title":"Actor"},{"location":"pages/structure/controller/#domain","text":"All domain related routes","title":"Domain"},{"location":"pages/structure/controller/#entry","text":"All entry related routes","title":"Entry"},{"location":"pages/structure/controller/#entries","text":"All routes, that deal with multiple entries (e.g. search, download)","title":"Entries"},{"location":"pages/structure/controller/#entry_files","text":"All routes that deal with entry-attachments","title":"Entry_files"},{"location":"pages/structure/controller/#config","text":"Some admin and migration endpoints","title":"Config"},{"location":"pages/structure/controller/#language","text":"Language and Message related enpoints","title":"Language"},{"location":"pages/structure/controller/#oauth","text":"","title":"OAuth"},{"location":"pages/structure/controller/#plugin","text":"","title":"Plugin"},{"location":"pages/structure/controller/#sse_connection","text":"","title":"sse_connection"},{"location":"pages/structure/controller/#util","text":"","title":"Util"},{"location":"pages/structure/controller/#test","text":"","title":"Test"}]}